<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Withdraw money</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
  <link rel="stylesheet" href="/dist/css/adminlte.min.css">
  <link rel="stylesheet" href="/css/admin.css">
</head>

<body class="hold-transition sidebar-mini">
  <div class="wrapper">
    <%- include('nav') %>
    <div class="content-wrapper">
      <section class="content-header">
        <div class="container-fluid">
          <div class="row mb-2">
            <div class="col-sm-6">
              <h1>Browse withdrawals <img data-v-7b283485="" width="35px" height="35px" src="/images/withdraw.png" class="chackImg"></h1>
            </div>
          </div>
        </div>
      </section>

      <section class="content">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Withdrawals Requests</h3>

            <div class="card-tools">
              <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                <i class="fas fa-minus"></i>
              </button>
              <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                <i class="fas fa-times"></i>
              </button>
            </div>
          </div>

          <div class="card-body p-0" style="overflow-y: hidden;">
            <table class="table table-striped projects">
              <thead>
                <tr>
                  <th class="text-center">#</th>
                  <th class="text-center">Account</th>
                  <th class="text-center">Bank</th>
                  <th class="text-center">Account Number</th>
                  <th class="text-center">Account Name</th>
                  <th class="text-center">IFSC</th>
                  <th class="text-center">UPI ID</th>
                  <th class="text-center">Amount</th>
                  <th class="text-center">Date</th>
                  <th class="text-center">Status</th>
                  <th class="text-center">Accept/Reject</th>
                </tr>
              </thead>
              <tbody>
                <!-- Table body will be populated dynamically -->
              </tbody>
            </table>
          </div>

          <nav aria-label="Page navigation example" style="margin-top: 20px;display: flex;justify-content: center;">
            <ul class="pagination table1">
              <li class="page-item previous">
                <a class="page-link" href="#" tabindex="-1">Previous</a>
              </li>
              <div id="numbers" style="display: flex;"></div>
              <li class="page-item next">
                <a class="page-link" href="#">Next</a>
              </li>
            </ul>
          </nav>
        </div>
      </section>
    </div>
  </div>

  <script src="/plugins/jquery/jquery.min.js"></script>
  <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="/dist/js/adminlte.min.js"></script>
  <script src="/js/admin/admin.js"></script>
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>

  <script>
    function formateT(params) {
      let result = (params < 10) ? "0" + params : params;
      return result;
    }

    function timerJoin(params = '', addHours = 0) {
      let date = params ? new Date(Number(params)) : new Date();
      date.setHours(date.getHours() + addHours);

      let years = formateT(date.getFullYear());
      let months = formateT(date.getMonth() + 1);
      let days = formateT(date.getDate());

      let hours = date.getHours() % 12;
      hours = hours === 0 ? 12 : hours;
      let ampm = date.getHours() < 12 ? "AM" : "PM";

      let minutes = formateT(date.getMinutes());
      let seconds = formateT(date.getSeconds());

      return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;
    }

    function show(params) {
      if (params.length == 0) {
        $('tbody').html(`
            <tr class="text-center">
              <td colspan="11">No more data...</td>
            </tr>
          `);
        return;
      }
      let html = '';
      params.forEach((data) => {
        html += `<tr class="text-center">
                  <td>${data.id}</td>
                  <td><b>${data.phone}</b></td>
                  <td><b>${data.name_bank}</b></td>
                  <td style="min-width: 190px;"><b>${data.stk}</b></td>
                  <td style="min-width: 190px;"><b>${data.name_user}</b></td>
                  <td style="min-width: 190px;"><b>${data.ifsc}</b></td>
                  <td style="min-width: 190px;"><b>${data.sdt}</b></td>
                  <td><b>${data.money}</b></td>
                  <td style="min-width: 190px;"><b>${timerJoin(data.time)}</b></td>
                  <td class="project-state"><span class="badge badge-warning">Waiting...</span></td>
                  <td class="project-actions text-center" style="min-width: 160px;">
                    <a class="btn btn-success btn-sm confirm-btn" href="#" data="${data.id}"><i class="fa fa-check-circle"></i></a>
                    <a class="btn btn-danger btn-sm delete-btn" href="#" data="${data.id}"><i class="fas fa-times-circle"></i></a>
                  </td>
                </tr>`;
      });
      $('tbody').html(html);
    }

    let current = 1;
    let totalPages = 1;

    function fetchData(page) {
      $.ajax({
        type: "POST",
        url: `/api/webapi/admin/recharge?limit=10&page=${page}`,
        dataType: "json",
        success: function (response) {
          totalPages = Math.ceil(response.count[2][0].totalCount/10);
          console.log(response.count,'j')
          show(response.datas3);
          $('#numbers').text(`${current} / ${totalPages}`);

          // Manage pagination button states
          if (current === 1) {
            $('.previous').addClass('disabled');
          } else {
            $('.previous').removeClass('disabled');
          }
          if (current === totalPages) {
            $('.next').addClass('disabled');
          } else {
            $('.next').removeClass('disabled');
          }
        }
      });
    }

    // Initial fetch
    fetchData(current);

    // Next page event
    $('.next').click(function (e) {
      e.preventDefault();
      if (current < totalPages) {
        current++;
        fetchData(current);
      }
    });

    // Previous page event
    $('.previous').click(function (e) {
      e.preventDefault();
      if (current > 1) {
        current--;
        fetchData(current);
      }
    });

    // Confirm button event
    $(document).on('click', '.btn-success', function (e) {
      e.preventDefault();
      Swal.fire({
    title: 'Are you sure?',
    text: "You want to accept this withdraw?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, accept it!'
  }).then((result) => {
    if(result.isConfirmed){
      let id = $(this).attr('data');
      $.ajax({
        type: "POST",
        url: "/api/webapi/admin/withdraw",
        data: { id: id, type: 'confirm' },
        dataType: "json",
        success: function () {
          Swal.fire('Good job!', 'Withdrawal Accepted Successfully!', 'success');
          setTimeout(() => { location.reload(); }, 100);
        }
      });
    }
  })
     
    });

    // Delete button event
    $(document).on('click', '.btn-danger', function (e) {
      e.preventDefault();
      Swal.fire({
    title: 'Are you sure?',
    text: "You want to reject this withdraw?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, delete it!'
  }).then((result) => {
    if(result.isConfirmed){
      let id = $(this).attr('data');
      $.ajax({
        type: "POST",
        url: "/api/webapi/admin/withdraw",
        data: { id: id, type: 'delete' },
        dataType: "json",
        success: function () {
          Swal.fire('Good job!', 'Withdrawal Rejected Successfully!', 'success');
          setTimeout(() => { location.reload(); }, 100);
        }
      });
    }
  })
      
    });
  </script>
</body>

</html>
